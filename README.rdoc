= ecore

ecore is a (economic) content repository implementation for the 
RubyOnRails ActiveRecord ORM including a content-based authorization
system. Content is only delivered, if the session-holder can access it.

A node is declared within a common ActiveRecord schema by adding

 t.ecore_defaults

This adds 'name','created_at', 'hashed_acl', ... and other attributes to
the new model migration. The id should be set to false (no auto-increment). It
will be auto-generated by a time-based UUID-method in order to provide unique
ids across all the different node models. This enables a lookup over the whole
content repository, e.g.: Ecore::Node.find(session, :name => 'some name')

Also, the node model needs the "acts_as_node" method (mixed in to ActiveRecord::Base)
to be called. An example could be:

 class MyContact < ActiveRecord::Base
   acts_as_node
 end

This enables everything that ecore provides. the "find" and "first" methods of
ActiveRecord will now be overwritten and their new syntax is extended by the
session attribute.

Basically all nodes are stored in the sql database as a flat table (as usual), but
through "path" and "label_node_ids" attributes, a hierarchical dependency is established
which also affects the accessibility of a node. If a node is accessible to somebody,
also the node's path children will be accessibly to that person - unless explicitely denied
for a node.

ecore also implements a labeling system, which allows associating (labeling)
a node with another node. Methodologically this is very similar to symlinks in the
unix filesystem. By linking a node with a label, all the node's label access attributes
also match to the node itself.

== Usage examples

 session = Ecore::Session.new(:name => 'myuser', :password => 'mypass')
 
 nodes_array = Ecore::Node.find(session, :path => "/parent/of/multiple/nodes")
 node = Ecore::Node.find(session, :id => "my-concrete-node-uuid")

 Ecore::Node.create(:session => session, :name => 'mynodename', :attrA => "Attribute A")

also, anonymous sessions can be created, if the special user "anybody" has access
on a node, it will be returned

 Ecore::Node.find(:session => Ecore::Session.new(:name => 'anybody'), :path => "/")


== License

This software is released under the MIT license (see mit-license.txt for details)

=== Contact

quaqua@tastenwerk.com

